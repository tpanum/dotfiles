#! /bin/sh
xsetroot -cursor_name left_ptr &

bspc config remove_disabled_monitors true
bspc config remove_unplugged_monitors true

bspc config border_width         4
bspc config window_gap          15
bspc config top_padding         20

bspc config split_ratio          0.50
bspc config borderless_monocle   false
bspc config gapless_monocle      true
bspc config paddingless_monocle	 false

bspc config pointer_follows_monitor true
bspc config focus_follows_pointer   true
bspc config click_to_focus          true

bspc config normal_border_color		"#4c566a"
bspc config focused_border_color	"#5e81ac"
bspc config presel_feedback_color	"#5e81ac"

bspc rule -a URxvt desktop='^1' follow=on
bspc rule -a Firefox desktop='^2' follow=on
bspc rule -a Emacs state=tiled desktop='^3' follow=on
bspc rule -a Nautilus desktop='^4' follow=on
bspc rule -a Thunderbird desktop='^5' follow=on
bspc rule -a VirtualBox desktop='^8' follow=on
bspc rule -a Slack desktop='^7' follow=on
# bspc rule -a Gimp state=floating follow=on
# bspc rule -a Nautilus state=floating follow=on

xcape -e 'Shift_L=Escape' &
xmodmap $HOME/.Xmodmap &
udiskie &
xss-lock -- $HOME/scripts/lock.sh &
emacs &
firefox &

main_workspaces() {
    MAIN_MONITOR=$(xrandr --query | grep -E "connected primary" | cut -d " " -f1)
    bspc monitor $MAIN_MONITOR -d {Code,Web,Editor,FileBrowser,Mail,Music,Chat,VirtualBox,9}
}

setup_monitors() {
    DETECTED_KNOWN_MONITOR=$(autorandr 2>&1 | grep "\(detected\)\f*" | cut -d " " -f1)
    if [ ! -z ${DETECTED_KNOWN_MONITOR=} ]; then
        (pkill polybar)&
        autorandr --change
    fi

    MAIN_MONITOR=$(xrandr --query | grep -E "connected primary" | cut -d " " -f1)
    EXTERNAL_MONITOR=$(xrandr --query | grep -E "HDMI-?[0-9]+ connected" | cut -d " " -f1)

    (MONITOR=$MAIN_MONITOR polybar --reload top) &
    if [ ! -z ${EXTERNAL_MONITOR} ]; then
        xrandr --output $EXTERNAL_MONITOR --auto --right-of $MAIN_MONITOR

        main_workspaces
        bspc monitor $EXTERNAL_MONITOR -d 7
    else
        main_workspaces
    fi

    ~/.scripts/wallpaper.sh
}

setup_monitors

bspc subscribe monitor | while read -r line; do
  case $line in
      monitor_add*|monitor_geometry*|monitor_remove*)
          setup_monitors
      ;;
      *)
      ;;
  esac
done
