diff --git a/config.def.h b/config.def.h
index 1c0b587..e888db4 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,17 +1,36 @@
 /* See LICENSE file for copyright and license details. */
 
+#include <X11/XF86keysym.h>
+
 /* appearance */
+#define NORD0 "#2E3440"
+#define NORD1 "#3B4252"
+#define NORD2 "#434C5E"
+#define NORD3 "#4C566A"
+#define NORD4 "#D8DEE9"
+#define NORD5 "#E5E9F0"
+#define NORD6 "#ECEFF4"
+#define NORD7 "#8FBCBB"
+#define NORD8 "#88C0D0"
+#define NORD9 "#81A1C1"
+#define NORD10 "#5E81AC"
+#define NORD11 "#BF616A"
+#define NORD12 "#D08770"
+#define NORD13 "#EBCB8B"
+#define NORD14 "#A3BE8C"
+#define NORD15 "#B48EAD"
+
 static const unsigned int borderpx  = 1;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
-static const char *fonts[]          = { "monospace:size=10" };
-static const char dmenufont[]       = "monospace:size=10";
-static const char col_gray1[]       = "#222222";
-static const char col_gray2[]       = "#444444";
-static const char col_gray3[]       = "#bbbbbb";
-static const char col_gray4[]       = "#eeeeee";
-static const char col_cyan[]        = "#005577";
+static const char *fonts[]          = { "roboto:size=10" };
+static const char dmenufont[]       = "roboto:size=10";
+static const char col_gray1[]       = NORD0;
+static const char col_gray2[]       = NORD2;
+static const char col_gray3[]       = NORD9;
+static const char col_gray4[]       = NORD6;
+static const char col_cyan[]        = NORD0;
 static const char *colors[][3]      = {
 	/*               fg         bg         border   */
 	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
@@ -26,9 +45,13 @@ static const Rule rules[] = {
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	/* class         instance     title       tags mask    iscentered  isfloating   monitor */
+        { "Alacritty",   "Alacritty", NULL,       1 << 0,      0,          0,           -1 },
+	{ "Alacritty",   "fzf-menu",  NULL,       NULL,        1,          1,           -1 },
+	{ "Firefox",     NULL,        NULL,       1 << 1,      0,          0,           -1 },
+	{ "Emacs",       NULL,        NULL,       1 << 2,      0,          0,           -1 },
+	{ "Thunar",      NULL,        NULL,       1 << 3,      0,          0,           -1 },
+	{ "Thunderbird", NULL,        NULL,       1 << 4,      0,          0,           -1 },
 };
 
 /* layout(s) */
@@ -44,7 +67,7 @@ static const Layout layouts[] = {
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
@@ -57,7 +80,24 @@ static const Layout layouts[] = {
 /* commands */
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
 static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
-static const char *termcmd[]  = { "st", NULL };
+static const char *termcmd[]  = { "alacritty", NULL };
+
+static const char *upvol[]   = { "pactl", "set-sink-volume", "0", "+5%",     NULL };
+static const char *downvol[] = { "pactl", "set-sink-volume", "0", "-5%",     NULL };
+static const char *mutevol[] = { "pactl", "set-sink-mute", "0", "toggle", NULL };
+static const char *nextsong[] = { "playerctl", "next", NULL };
+static const char *prevsong[] = { "playerctl", "previous", NULL };
+static const char *playpause[] = { "playerctl", "play-pause", NULL };
+
+static const char *downbright[] = { "xbacklight", "-dec", "5", "-steps", "1",     NULL };
+static const char *upbright[] = { "xbacklight", "-inc", "5", "-steps", "1",     NULL };
+
+static const char *swapkb[] = { "/home/tpanum/.scripts/keyboard.sh", "cycle", "dk", "us",     NULL };
+static const char *lockscreen[] = { "xsecurelock", NULL };
+static const char *findfile[] = { "/home/tpanum/.scripts/open_file_or_folder.sh", NULL };
+static const char *osxcopy[] = { "/home/tpanum/.scripts/osx_copy.sh", NULL };
+static const char *osxpaste[] = { "/home/tpanum/.scripts/osx_paste.sh", NULL };
+static const char *passwdmanager[] = { "rofi-pass", NULL };
 
 static Key keys[] = {
 	/* modifier                     key        function        argument */
@@ -72,7 +112,7 @@ static Key keys[] = {
 	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
 	{ MODKEY,                       XK_Return, zoom,           {0} },
 	{ MODKEY,                       XK_Tab,    view,           {0} },
-	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
+	{ MODKEY,                       XK_q,      killclient,     {0} },
 	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
 	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
 	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
@@ -94,6 +134,21 @@ static Key keys[] = {
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
 	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+
+	{ 0,                            XF86XK_AudioLowerVolume, spawn, {.v = downvol } },
+	{ 0,                            XF86XK_AudioMute, spawn, {.v = mutevol } },
+	{ 0,                            XF86XK_AudioRaiseVolume, spawn, {.v = upvol } },
+	{ 0,                            XF86XK_AudioPlay, spawn, {.v = playpause } },
+	{ 0,                            XF86XK_AudioNext, spawn, {.v = nextsong } },
+	{ 0,                            XF86XK_AudioPrev, spawn, {.v = prevsong } },
+	{ 0,                            XF86XK_MonBrightnessDown, spawn, {.v = downbright } },
+	{ 0,                            XF86XK_MonBrightnessUp, spawn, {.v = upbright } },
+	{ MODKEY|ShiftMask,             XK_y, spawn, {.v = lockscreen } },
+	{ MODKEY|ShiftMask,             XK_k, spawn, {.v = swapkb} },
+	{ MODKEY,                       XK_o, spawn, {.v = findfile } },
+	{ MODKEY,                       XK_c, spawn, {.v = osxcopy } },
+	{ MODKEY,                       XK_v, spawn, {.v = osxpaste } },
+	{ MODKEY,                       XK_n, spawn, {.v = passwdmanager } },
 };
 
 /* button definitions */
diff --git a/dwm.c b/dwm.c
index 4465af1..7ce4bf1 100644
--- a/dwm.c
+++ b/dwm.c
@@ -92,7 +92,7 @@ struct Client {
 	int basew, baseh, incw, inch, maxw, maxh, minw, minh;
 	int bw, oldbw;
 	unsigned int tags;
-	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;
+        int isfixed, iscentered, isfloating, isurgent, neverfocus, oldstate, isfullscreen;
 	Client *next;
 	Client *snext;
 	Monitor *mon;
@@ -137,6 +137,7 @@ typedef struct {
 	const char *instance;
 	const char *title;
 	unsigned int tags;
+	int iscentered;
 	int isfloating;
 	int monitor;
 } Rule;
@@ -297,6 +298,7 @@ applyrules(Client *c)
 		&& (!r->class || strstr(class, r->class))
 		&& (!r->instance || strstr(instance, r->instance)))
 		{
+		        c->iscentered = r->iscentered;
 			c->isfloating = r->isfloating;
 			c->tags |= r->tags;
 			for (m = mons; m && m->num != r->monitor; m = m->next);
@@ -1049,6 +1051,11 @@ manage(Window w, XWindowAttributes *wa)
 		&& (c->x + (c->w / 2) < c->mon->wx + c->mon->ww)) ? bh : c->mon->my);
 	c->bw = borderpx;
 
+	if(c->iscentered) {
+		c->x = (c->mon->mw - WIDTH(c)) / 2;
+		c->y = (c->mon->mh - HEIGHT(c)) / 2;
+	}
+
 	wc.border_width = c->bw;
 	XConfigureWindow(dpy, w, CWBorderWidth, &wc);
 	XSetWindowBorder(dpy, w, scheme[SchemeNorm][ColBorder].pixel);
